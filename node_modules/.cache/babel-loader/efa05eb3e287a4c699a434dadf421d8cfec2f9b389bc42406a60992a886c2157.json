{"ast":null,"code":"var _jsxFileName = \"/home/awwal-dev/Documents/TECH/Web development/projects/Digital Tasbeeh/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Splash from \"./Splash\";\nimport UmalquraDate from \"@umalqura/core\";\nfunction App() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [bgColor, setBgColor] = useState(\"#0d6efd\");\n  const [showSplash, setShowSplash] = useState(true);\n  const [hijriDate, setHijriDate] = useState(\"\");\n  useEffect(() => {\n    const today = new Date();\n    const gYear = today.getFullYear();\n    const gMonth = today.getMonth() + 1;\n    const gDay = today.getDate();\n\n    // Check year range supported by UmalquraDate (1318-1500 Gregorian)\n    if (gYear < 1318 || gYear > 1500) {\n      setHijriDate(\"Date out of supported range for Hijri calendar.\");\n      return;\n    }\n    try {\n      const hijri = new UmalquraDate(gYear, gMonth, gDay);\n      const hijriMonths = [\"Muharram\", \"Safar\", \"Rabi'ul-awwal\", \"Rabi'ul-thani\", \"Jumadal-awwal\", \"Jumadath-thani\", \"Rajab\", \"Sha'ban\", \"Ramadan\", \"Shawwal\", \"Dhul-Qa'dah\", \"Dhul-Hijjah\"];\n      const monthName = hijriMonths[hijri.month - 1];\n      const formatted = \"Hijri Date: \".concat(hijri.day, \" \").concat(monthName, \" \").concat(hijri.year, \" AH\");\n      setHijriDate(formatted);\n    } catch (error) {\n      console.error(error);\n      setHijriDate(\"Error generating Hijri date.\");\n    }\n    const splashTimeout = setTimeout(() => {\n      setShowSplash(false);\n    }, 3000);\n    return () => clearTimeout(splashTimeout);\n  }, []);\n\n  // Show splash if still active\n  if (showSplash) {\n    return /*#__PURE__*/React.createElement(Splash, {\n      onFinish: () => setShowSplash(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hijri-banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 1\n    }\n  }, \"Hijri Date: \", hijriDate), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"screen\",\n    style: {\n      backgroundColor: bgColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"counter-body\",\n    style: {\n      borderColor: bgColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, String(count).padStart(4, \"0\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"icon-btn\",\n    onClick: () => setCount(0),\n    title: \"Reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDD04\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"main-btn\",\n    onClick: () => setCount(count + 1),\n    style: {\n      \"--btn-bg\": \"#fff\",\n      \"--btn-hover-bg\": bgColor // or any dynamic value\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"color\",\n    value: bgColor,\n    onChange: e => setBgColor(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Theme\")))));\n}\n_s(App, \"HttQoRdgEZpQQFrQZRtW5gV/OiM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Splash","UmalquraDate","App","_s","count","setCount","bgColor","setBgColor","showSplash","setShowSplash","hijriDate","setHijriDate","today","Date","gYear","getFullYear","gMonth","getMonth","gDay","getDate","hijri","hijriMonths","monthName","month","formatted","concat","day","year","error","console","splashTimeout","setTimeout","clearTimeout","createElement","onFinish","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","style","backgroundColor","borderColor","String","padStart","onClick","title","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/awwal-dev/Documents/TECH/Web development/projects/Digital Tasbeeh/src/components/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Splash from \"./Splash\";\nimport UmalquraDate from \"@umalqura/core\";\n\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [bgColor, setBgColor] = useState(\"#0d6efd\");\n  const [showSplash, setShowSplash] = useState(true);\n  const [hijriDate, setHijriDate] = useState(\"\");\n\nuseEffect(() => {\n  const today = new Date();\n  const gYear = today.getFullYear();\n  const gMonth = today.getMonth() + 1;\n  const gDay = today.getDate();\n\n  // Check year range supported by UmalquraDate (1318-1500 Gregorian)\n  if (gYear < 1318 || gYear > 1500) {\n    setHijriDate(\"Date out of supported range for Hijri calendar.\");\n    return;\n  }\n\n  try {\n    const hijri = new UmalquraDate(gYear, gMonth, gDay);\n    \n    const hijriMonths = [\n      \"Muharram\",\n      \"Safar\",\n      \"Rabi'ul-awwal\",\n      \"Rabi'ul-thani\",\n      \"Jumadal-awwal\",\n      \"Jumadath-thani\",\n      \"Rajab\",\n      \"Sha'ban\",\n      \"Ramadan\",\n      \"Shawwal\",\n      \"Dhul-Qa'dah\",\n      \"Dhul-Hijjah\",\n    ];\n\n    const monthName = hijriMonths[hijri.month - 1];\n    const formatted = `Hijri Date: ${hijri.day} ${monthName} ${hijri.year} AH`;\n    setHijriDate(formatted);\n  } catch (error) {\n    console.error(error);\n    setHijriDate(\"Error generating Hijri date.\");\n  }\n\n  const splashTimeout = setTimeout(() => {\n    setShowSplash(false);\n  }, 3000);\n\n  return () => clearTimeout(splashTimeout);\n}, []);\n\n\n  // Show splash if still active\n  if (showSplash) {\n    return <Splash onFinish={() => setShowSplash(false)} />;\n  }\n\n  return (\n    <div className=\"app\">\n<div className=\"hijri-banner\">Hijri Date: {hijriDate}</div>\n      <div className=\"screen\" style={{ backgroundColor: bgColor }}>\n        <div className=\"counter-body\" style={{ borderColor: bgColor }}>\n          <div className=\"display\">{String(count).padStart(4, \"0\")}</div>\n\n          <div className=\"buttons\">\n            <button\n              className=\"icon-btn\"\n              onClick={() => setCount(0)}\n              title=\"Reset\"\n            >\n              ðŸ”„\n            </button>\n          </div>\n\n          <button\n            className=\"main-btn\"\n            onClick={() => setCount(count + 1)}\n    style={{\n    \"--btn-bg\": \"#fff\",\n    \"--btn-hover-bg\": bgColor // or any dynamic value\n  }}\n          ></button>\n        </div>\n\n        <footer>\n          <input\n            type=\"color\"\n            value={bgColor}\n            onChange={(e) => setBgColor(e.target.value)}\n          />\n          <h2>\n            <b>Theme</b>\n          </h2>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}