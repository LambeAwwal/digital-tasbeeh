{"ast":null,"code":"var _jsxFileName = \"/home/awwal-dev/Documents/TECH/Web development/projects/Digital Tasbeeh/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Splash from \"./Splash\";\nimport moment from 'moment-hijri';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [bgColor, setBgColor] = useState(\"#0d6efd\");\n  const [showSplash, setShowSplash] = useState(true);\n  const [hijriDate, setHijriDate] = useState(\"\");\n  const [installPromptEvent, setInstallPromptEvent] = useState(null);\n\n  // 1. Capture the install prompt event\n  useEffect(() => {\n    const handler = e => {\n      e.preventDefault();\n      console.log(\"PWA install prompt available\");\n      setInstallPromptEvent(e);\n    };\n    window.addEventListener('beforeinstallprompt', handler);\n    return () => window.removeEventListener('beforeinstallprompt', handler);\n  }, []);\n\n  // 2. Handle install button click\n  const handleInstallClick = async () => {\n    if (!installPromptEvent) return;\n\n    // Show the native prompt\n    installPromptEvent.prompt();\n\n    // Wait for user decision\n    const {\n      outcome\n    } = await installPromptEvent.userChoice;\n    console.log(`User ${outcome} the install`);\n\n    // Reset the prompt\n    setInstallPromptEvent(null);\n  };\n\n  // 3. Existing Hijri date logic\n  useEffect(() => {\n    const splashTimeout = setTimeout(() => setShowSplash(false), 3000);\n    try {\n      const hijriMoment = moment();\n      setHijriDate(`${hijriMoment.format('iD')} ${hijriMoment.format('iMMMM')} ${hijriMoment.format('iYYYY')} AH`);\n    } catch (error) {\n      console.error(\"Error generating Hijri date:\", error);\n      setHijriDate(\"Hijri Date: Unavailable\");\n    }\n    return () => clearTimeout(splashTimeout);\n  }, []);\n  if (showSplash) {\n    return /*#__PURE__*/_jsxDEV(Splash, {\n      onFinish: () => setShowSplash(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [installPromptEvent && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInstallClick,\n      style: {\n        position: 'fixed',\n        bottom: '20px',\n        right: '20px',\n        padding: '10px 15px',\n        backgroundColor: '#ffffff',\n        color: bgColor,\n        border: 'none',\n        borderRadius: '5px',\n        fontWeight: 'bold',\n        zIndex: 1000,\n        boxShadow: '0 2px 10px rgba(0,0,0,0.2)'\n      },\n      children: \"Install App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hijri-banner\",\n      children: [\"Hijri Date: \", hijriDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen\",\n      style: {\n        backgroundColor: bgColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m1GLFebi4Yg45ETMz4daLKSxvpU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Splash","moment","jsxDEV","_jsxDEV","App","_s","count","setCount","bgColor","setBgColor","showSplash","setShowSplash","hijriDate","setHijriDate","installPromptEvent","setInstallPromptEvent","handler","e","preventDefault","console","log","window","addEventListener","removeEventListener","handleInstallClick","prompt","outcome","userChoice","splashTimeout","setTimeout","hijriMoment","format","error","clearTimeout","onFinish","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","style","position","bottom","right","padding","backgroundColor","color","border","borderRadius","fontWeight","zIndex","boxShadow","_c","$RefreshReg$"],"sources":["/home/awwal-dev/Documents/TECH/Web development/projects/Digital Tasbeeh/src/components/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Splash from \"./Splash\";\nimport moment from 'moment-hijri';\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [bgColor, setBgColor] = useState(\"#0d6efd\");\n  const [showSplash, setShowSplash] = useState(true);\n  const [hijriDate, setHijriDate] = useState(\"\");\n  const [installPromptEvent, setInstallPromptEvent] = useState(null);\n\n  // 1. Capture the install prompt event\n  useEffect(() => {\n    const handler = (e) => {\n      e.preventDefault();\n      console.log(\"PWA install prompt available\");\n      setInstallPromptEvent(e);\n    };\n    window.addEventListener('beforeinstallprompt', handler);\n    return () => window.removeEventListener('beforeinstallprompt', handler);\n  }, []);\n\n  // 2. Handle install button click\n  const handleInstallClick = async () => {\n    if (!installPromptEvent) return;\n    \n    // Show the native prompt\n    installPromptEvent.prompt();\n    \n    // Wait for user decision\n    const { outcome } = await installPromptEvent.userChoice;\n    console.log(`User ${outcome} the install`);\n    \n    // Reset the prompt\n    setInstallPromptEvent(null);\n  };\n\n  // 3. Existing Hijri date logic\n  useEffect(() => {\n    const splashTimeout = setTimeout(() => setShowSplash(false), 3000);\n    \n    try {\n      const hijriMoment = moment();\n      setHijriDate(`${hijriMoment.format('iD')} ${hijriMoment.format('iMMMM')} ${hijriMoment.format('iYYYY')} AH`);\n    } catch (error) {\n      console.error(\"Error generating Hijri date:\", error);\n      setHijriDate(\"Hijri Date: Unavailable\");\n    }\n\n    return () => clearTimeout(splashTimeout);\n  }, []);\n\n  if (showSplash) {\n    return <Splash onFinish={() => setShowSplash(false)} />;\n  }\n\n  return (\n    <div className=\"app\">\n      {/* Install button - only shows when PWA is installable */}\n      {installPromptEvent && (\n        <button\n          onClick={handleInstallClick}\n          style={{\n            position: 'fixed',\n            bottom: '20px',\n            right: '20px',\n            padding: '10px 15px',\n            backgroundColor: '#ffffff',\n            color: bgColor,\n            border: 'none',\n            borderRadius: '5px',\n            fontWeight: 'bold',\n            zIndex: 1000,\n            boxShadow: '0 2px 10px rgba(0,0,0,0.2)'\n          }}\n        >\n          Install App\n        </button>\n      )}\n\n      {/* Your existing app content */}\n      <div className=\"hijri-banner\">Hijri Date: {hijriDate}</div>\n      <div className=\"screen\" style={{ backgroundColor: bgColor }}>\n        {/* ... rest of your counter UI ... */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}