{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import Splash from\"./Splash\";import moment from'moment-hijri';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[count,setCount]=useState(0);const[bgColor,setBgColor]=useState(\"#0d6efd\");const[showSplash,setShowSplash]=useState(true);const[hijriDate,setHijriDate]=useState(\"\");// Add this inside your App component:\nuseEffect(()=>{window.addEventListener('beforeinstallprompt',e=>{e.preventDefault();// Store the event for later use\nwindow.deferredPrompt=e;});},[]);useEffect(()=>{const splashTimeout=setTimeout(()=>setShowSplash(false),3000);try{// First try moment-hijri (most reliable)\nconst hijriMoment=moment();const formattedDate=\"\".concat(hijriMoment.format('iD'),\" \").concat(hijriMoment.format('iMMMM'),\" \").concat(hijriMoment.format('iYYYY'),\" AH\");setHijriDate(formattedDate);}catch(error){console.error(\"Error with moment-hijri:\",error);try{// Fallback to Intl API if moment fails\nconst formatter=new Intl.DateTimeFormat('en-US',{day:'numeric',month:'long',year:'numeric',calendar:'islamic'});const parts=formatter.formatToParts(new Date());const day=parts.find(p=>p.type==='day').value;const month=parts.find(p=>p.type==='month').value;const year=parts.find(p=>p.type==='year').value;setHijriDate(\"\".concat(day,\" \").concat(month,\" \").concat(year,\" AH\"));}catch(intlError){console.error(\"Error with Intl API:\",intlError);// Final fallback\nsetHijriDate(moment().format('iD iMMMM iYYYY')+\" AH\");}}return()=>clearTimeout(splashTimeout);},[]);// Show splash if still active\nif(showSplash){return/*#__PURE__*/_jsx(Splash,{onFinish:()=>setShowSplash(false)});}return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hijri-banner\",children:[\"Hijri Date: \",hijriDate]}),/*#__PURE__*/_jsxs(\"div\",{className:\"screen\",style:{backgroundColor:bgColor},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"counter-body\",style:{borderColor:bgColor},children:[/*#__PURE__*/_jsx(\"div\",{className:\"display\",children:String(count).padStart(4,\"0\")}),/*#__PURE__*/_jsx(\"div\",{className:\"buttons\",children:/*#__PURE__*/_jsx(\"button\",{className:\"icon-btn\",onClick:()=>setCount(0),title:\"Reset\",children:\"\\uD83D\\uDD04\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"main-btn\",onClick:()=>setCount(count+1),style:{\"--btn-bg\":\"#fff\",\"--btn-hover-bg\":bgColor// or any dynamic value\n}})]}),/*#__PURE__*/_jsxs(\"footer\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"color\",value:bgColor,onChange:e=>setBgColor(e.target.value)}),/*#__PURE__*/_jsx(\"h2\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Theme\"})})]})]})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","Splash","moment","jsx","_jsx","jsxs","_jsxs","App","count","setCount","bgColor","setBgColor","showSplash","setShowSplash","hijriDate","setHijriDate","window","addEventListener","e","preventDefault","deferredPrompt","splashTimeout","setTimeout","hijriMoment","formattedDate","concat","format","error","console","formatter","Intl","DateTimeFormat","day","month","year","calendar","parts","formatToParts","Date","find","p","type","value","intlError","clearTimeout","onFinish","className","children","style","backgroundColor","borderColor","String","padStart","onClick","title","onChange","target"],"sources":["/home/awwal-dev/Documents/TECH/Web development/projects/Digital Tasbeeh/src/components/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Splash from \"./Splash\";\nimport moment from 'moment-hijri';\n\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [bgColor, setBgColor] = useState(\"#0d6efd\");\n  const [showSplash, setShowSplash] = useState(true);\n  const [hijriDate, setHijriDate] = useState(\"\");\n\n  // Add this inside your App component:\nuseEffect(() => {\n  window.addEventListener('beforeinstallprompt', (e) => {\n    e.preventDefault();\n    // Store the event for later use\n    window.deferredPrompt = e;\n  });\n}, []);\n\n  useEffect(() => {\n    const splashTimeout = setTimeout(() => setShowSplash(false), 3000);\n    \n    try {\n      // First try moment-hijri (most reliable)\n      const hijriMoment = moment();\n      const formattedDate = `${hijriMoment.format('iD')} ${hijriMoment.format('iMMMM')} ${hijriMoment.format('iYYYY')} AH`;\n      setHijriDate(formattedDate);\n    } catch (error) {\n      console.error(\"Error with moment-hijri:\", error);\n      try {\n        // Fallback to Intl API if moment fails\n        const formatter = new Intl.DateTimeFormat('en-US', {\n          day: 'numeric',\n          month: 'long',\n          year: 'numeric',\n          calendar: 'islamic'\n        });\n        const parts = formatter.formatToParts(new Date());\n        const day = parts.find(p => p.type === 'day').value;\n        const month = parts.find(p => p.type === 'month').value;\n        const year = parts.find(p => p.type === 'year').value;\n        setHijriDate(`${day} ${month} ${year} AH`);\n      } catch (intlError) {\n        console.error(\"Error with Intl API:\", intlError);\n        // Final fallback\n        setHijriDate(moment().format('iD iMMMM iYYYY') + \" AH\");\n      }\n    }\n\n    return () => clearTimeout(splashTimeout);\n  }, []);\n  // Show splash if still active\n  if (showSplash) {\n    return <Splash onFinish={() => setShowSplash(false)} />;\n  }\n\n  return (\n    <div className=\"app\">\n<div className=\"hijri-banner\">Hijri Date: {hijriDate}</div>\n      <div className=\"screen\" style={{ backgroundColor: bgColor }}>\n        <div className=\"counter-body\" style={{ borderColor: bgColor }}>\n          <div className=\"display\">{String(count).padStart(4, \"0\")}</div>\n\n          <div className=\"buttons\">\n            <button\n              className=\"icon-btn\"\n              onClick={() => setCount(0)}\n              title=\"Reset\"\n            >\n              ðŸ”„\n            </button>\n          </div>\n\n          <button\n            className=\"main-btn\"\n            onClick={() => setCount(count + 1)}\n    style={{\n    \"--btn-bg\": \"#fff\",\n    \"--btn-hover-bg\": bgColor // or any dynamic value\n  }}\n          ></button>\n        </div>\n\n        <footer>\n          <input\n            type=\"color\"\n            value={bgColor}\n            onChange={(e) => setBgColor(e.target.value)}\n          />\n          <h2>\n            <b>Theme</b>\n          </h2>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}