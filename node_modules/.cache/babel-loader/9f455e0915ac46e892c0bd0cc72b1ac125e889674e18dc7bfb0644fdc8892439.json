{"ast":null,"code":"var _jsxFileName = \"/home/awwal-dev/Documents/TECH/Web development/projects/Digital Tasbeeh/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Splash from \"./Splash\";\nimport moment from 'moment-hijri';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [bgColor, setBgColor] = useState(\"#0d6efd\");\n  const [showSplash, setShowSplash] = useState(true);\n  const [hijriDate, setHijriDate] = useState(\"\");\n\n  // Add this inside your App component:\n  useEffect(() => {\n    window.addEventListener('beforeinstallprompt', e => {\n      e.preventDefault();\n      // Store the event for later use\n      window.deferredPrompt = e;\n    });\n  }, []);\n  useEffect(() => {\n    const splashTimeout = setTimeout(() => setShowSplash(false), 3000);\n    try {\n      // First try moment-hijri (most reliable)\n      const hijriMoment = moment();\n      const formattedDate = `${hijriMoment.format('iD')} ${hijriMoment.format('iMMMM')} ${hijriMoment.format('iYYYY')} AH`;\n      setHijriDate(formattedDate);\n    } catch (error) {\n      console.error(\"Error with moment-hijri:\", error);\n      try {\n        // Fallback to Intl API if moment fails\n        const formatter = new Intl.DateTimeFormat('en-US', {\n          day: 'numeric',\n          month: 'long',\n          year: 'numeric',\n          calendar: 'islamic'\n        });\n        const parts = formatter.formatToParts(new Date());\n        const day = parts.find(p => p.type === 'day').value;\n        const month = parts.find(p => p.type === 'month').value;\n        const year = parts.find(p => p.type === 'year').value;\n        setHijriDate(`${day} ${month} ${year} AH`);\n      } catch (intlError) {\n        console.error(\"Error with Intl API:\", intlError);\n        // Final fallback\n        setHijriDate(moment().format('iD iMMMM iYYYY') + \" AH\");\n      }\n    }\n    return () => clearTimeout(splashTimeout);\n  }, []);\n  // Show splash if still active\n  if (showSplash) {\n    return /*#__PURE__*/_jsxDEV(Splash, {\n      onFinish: () => setShowSplash(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hijri-banner\",\n      children: [\"Hijri Date: \", hijriDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen\",\n      style: {\n        backgroundColor: bgColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counter-body\",\n        style: {\n          borderColor: bgColor\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"display\",\n          children: String(count).padStart(4, \"0\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-btn\",\n            onClick: () => setCount(0),\n            title: \"Reset\",\n            children: \"\\uD83D\\uDD04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"main-btn\",\n          onClick: () => setCount(count + 1),\n          style: {\n            \"--btn-bg\": \"#fff\",\n            \"--btn-hover-bg\": bgColor // or any dynamic value\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: bgColor,\n          onChange: e => setBgColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yCzAEnkyj2g+jkaWqerCdp0zETs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Splash","moment","jsxDEV","_jsxDEV","App","_s","count","setCount","bgColor","setBgColor","showSplash","setShowSplash","hijriDate","setHijriDate","window","addEventListener","e","preventDefault","deferredPrompt","splashTimeout","setTimeout","hijriMoment","formattedDate","format","error","console","formatter","Intl","DateTimeFormat","day","month","year","calendar","parts","formatToParts","Date","find","p","type","value","intlError","clearTimeout","onFinish","fileName","_jsxFileName","lineNumber","columnNumber","className","children","style","backgroundColor","borderColor","String","padStart","onClick","title","onChange","target","_c","$RefreshReg$"],"sources":["/home/awwal-dev/Documents/TECH/Web development/projects/Digital Tasbeeh/src/components/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Splash from \"./Splash\";\nimport moment from 'moment-hijri';\n\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [bgColor, setBgColor] = useState(\"#0d6efd\");\n  const [showSplash, setShowSplash] = useState(true);\n  const [hijriDate, setHijriDate] = useState(\"\");\n\n  // Add this inside your App component:\nuseEffect(() => {\n  window.addEventListener('beforeinstallprompt', (e) => {\n    e.preventDefault();\n    // Store the event for later use\n    window.deferredPrompt = e;\n  });\n}, []);\n\n  useEffect(() => {\n    const splashTimeout = setTimeout(() => setShowSplash(false), 3000);\n    \n    try {\n      // First try moment-hijri (most reliable)\n      const hijriMoment = moment();\n      const formattedDate = `${hijriMoment.format('iD')} ${hijriMoment.format('iMMMM')} ${hijriMoment.format('iYYYY')} AH`;\n      setHijriDate(formattedDate);\n    } catch (error) {\n      console.error(\"Error with moment-hijri:\", error);\n      try {\n        // Fallback to Intl API if moment fails\n        const formatter = new Intl.DateTimeFormat('en-US', {\n          day: 'numeric',\n          month: 'long',\n          year: 'numeric',\n          calendar: 'islamic'\n        });\n        const parts = formatter.formatToParts(new Date());\n        const day = parts.find(p => p.type === 'day').value;\n        const month = parts.find(p => p.type === 'month').value;\n        const year = parts.find(p => p.type === 'year').value;\n        setHijriDate(`${day} ${month} ${year} AH`);\n      } catch (intlError) {\n        console.error(\"Error with Intl API:\", intlError);\n        // Final fallback\n        setHijriDate(moment().format('iD iMMMM iYYYY') + \" AH\");\n      }\n    }\n\n    return () => clearTimeout(splashTimeout);\n  }, []);\n  // Show splash if still active\n  if (showSplash) {\n    return <Splash onFinish={() => setShowSplash(false)} />;\n  }\n\n  return (\n    <div className=\"app\">\n<div className=\"hijri-banner\">Hijri Date: {hijriDate}</div>\n      <div className=\"screen\" style={{ backgroundColor: bgColor }}>\n        <div className=\"counter-body\" style={{ borderColor: bgColor }}>\n          <div className=\"display\">{String(count).padStart(4, \"0\")}</div>\n\n          <div className=\"buttons\">\n            <button\n              className=\"icon-btn\"\n              onClick={() => setCount(0)}\n              title=\"Reset\"\n            >\n              ðŸ”„\n            </button>\n          </div>\n\n          <button\n            className=\"main-btn\"\n            onClick={() => setCount(count + 1)}\n    style={{\n    \"--btn-bg\": \"#fff\",\n    \"--btn-hover-bg\": bgColor // or any dynamic value\n  }}\n          ></button>\n        </div>\n\n        <footer>\n          <input\n            type=\"color\"\n            value={bgColor}\n            onChange={(e) => setBgColor(e.target.value)}\n          />\n          <h2>\n            <b>Theme</b>\n          </h2>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}